{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const usePlatformState = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('landing');\n  const [userType, setUserType] = useState('');\n  const [onboardingStep, setOnboardingStep] = useState(0);\n  const [formData, setFormData] = useState({});\n  const [selectedBuyer, setSelectedBuyer] = useState(null);\n  const [matches, setMatches] = useState([]);\n  const [dealStage, setDealStage] = useState('initial');\n  const [aiAnalysis, setAiAnalysis] = useState(null);\n  const [uploadedDocs, setUploadedDocs] = useState([]);\n  const updateFormData = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const startOnboarding = type => {\n    setUserType(type);\n    setCurrentView('onboarding');\n    setOnboardingStep(0);\n  };\n  const simulateAIAnalysis = docType => {\n    setTimeout(() => {\n      setAiAnalysis({\n        type: docType,\n        summary: \"AI has analyzed the financial documents and identified key metrics, risk factors, and growth opportunities.\",\n        keyFindings: [\"Revenue growth of 23% YoY\", \"Strong cash flow with 18% EBITDA margin\", \"Low customer concentration risk\", \"Potential for operational improvements\"],\n        riskFactors: [\"Dependency on single supplier\", \"Market competition increasing\"],\n        confidence: 94\n      });\n    }, 2000);\n  };\n  return {\n    currentView,\n    setCurrentView,\n    userType,\n    setUserType,\n    onboardingStep,\n    setOnboardingStep,\n    formData,\n    setFormData,\n    updateFormData,\n    selectedBuyer,\n    setSelectedBuyer,\n    matches,\n    setMatches,\n    dealStage,\n    setDealStage,\n    aiAnalysis,\n    setAiAnalysis,\n    uploadedDocs,\n    setUploadedDocs,\n    startOnboarding,\n    simulateAIAnalysis\n  };\n};\n_s(usePlatformState, \"tXINpsas3+cLGWFSfcrW0S+wgVU=\");","map":{"version":3,"names":["useState","usePlatformState","_s","currentView","setCurrentView","userType","setUserType","onboardingStep","setOnboardingStep","formData","setFormData","selectedBuyer","setSelectedBuyer","matches","setMatches","dealStage","setDealStage","aiAnalysis","setAiAnalysis","uploadedDocs","setUploadedDocs","updateFormData","field","value","prev","startOnboarding","type","simulateAIAnalysis","docType","setTimeout","summary","keyFindings","riskFactors","confidence"],"sources":["D:/Brave Download/files/src/hooks/usePlatformState.ts"],"sourcesContent":["import { useState } from 'react';\nimport { ViewType, UserType, BuyerProfile, AIAnalysis } from '../types';\n\nexport const usePlatformState = () => {\n  const [currentView, setCurrentView] = useState<ViewType>('landing');\n  const [userType, setUserType] = useState<UserType>('');\n  const [onboardingStep, setOnboardingStep] = useState(0);\n  const [formData, setFormData] = useState<Record<string, any>>({});\n  const [selectedBuyer, setSelectedBuyer] = useState<BuyerProfile | null>(null);\n  const [matches, setMatches] = useState<number[]>([]);\n  const [dealStage, setDealStage] = useState('initial');\n  const [aiAnalysis, setAiAnalysis] = useState<AIAnalysis | null>(null);\n  const [uploadedDocs, setUploadedDocs] = useState<string[]>([]);\n\n  const updateFormData = (field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const startOnboarding = (type: UserType) => {\n    setUserType(type);\n    setCurrentView('onboarding');\n    setOnboardingStep(0);\n  };\n\n  const simulateAIAnalysis = (docType: string) => {\n    setTimeout(() => {\n      setAiAnalysis({\n        type: docType,\n        summary: \"AI has analyzed the financial documents and identified key metrics, risk factors, and growth opportunities.\",\n        keyFindings: [\n          \"Revenue growth of 23% YoY\",\n          \"Strong cash flow with 18% EBITDA margin\",\n          \"Low customer concentration risk\",\n          \"Potential for operational improvements\"\n        ],\n        riskFactors: [\n          \"Dependency on single supplier\",\n          \"Market competition increasing\"\n        ],\n        confidence: 94\n      });\n    }, 2000);\n  };\n\n  return {\n    currentView,\n    setCurrentView,\n    userType,\n    setUserType,\n    onboardingStep,\n    setOnboardingStep,\n    formData,\n    setFormData,\n    updateFormData,\n    selectedBuyer,\n    setSelectedBuyer,\n    matches,\n    setMatches,\n    dealStage,\n    setDealStage,\n    aiAnalysis,\n    setAiAnalysis,\n    uploadedDocs,\n    setUploadedDocs,\n    startOnboarding,\n    simulateAIAnalysis\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAGhC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAW,SAAS,CAAC;EACnE,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAW,EAAE,CAAC;EACtD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAsB,CAAC,CAAC,CAAC;EACjE,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAsB,IAAI,CAAC;EAC7E,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAoB,IAAI,CAAC;EACrE,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAW,EAAE,CAAC;EAE9D,MAAMqB,cAAc,GAAGA,CAACC,KAAa,EAAEC,KAAU,KAAK;IACpDb,WAAW,CAACc,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACF,KAAK,GAAGC;IAAM,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,MAAME,eAAe,GAAIC,IAAc,IAAK;IAC1CpB,WAAW,CAACoB,IAAI,CAAC;IACjBtB,cAAc,CAAC,YAAY,CAAC;IAC5BI,iBAAiB,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMmB,kBAAkB,GAAIC,OAAe,IAAK;IAC9CC,UAAU,CAAC,MAAM;MACfX,aAAa,CAAC;QACZQ,IAAI,EAAEE,OAAO;QACbE,OAAO,EAAE,6GAA6G;QACtHC,WAAW,EAAE,CACX,2BAA2B,EAC3B,yCAAyC,EACzC,iCAAiC,EACjC,wCAAwC,CACzC;QACDC,WAAW,EAAE,CACX,+BAA+B,EAC/B,+BAA+B,CAChC;QACDC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,OAAO;IACL9B,WAAW;IACXC,cAAc;IACdC,QAAQ;IACRC,WAAW;IACXC,cAAc;IACdC,iBAAiB;IACjBC,QAAQ;IACRC,WAAW;IACXW,cAAc;IACdV,aAAa;IACbC,gBAAgB;IAChBC,OAAO;IACPC,UAAU;IACVC,SAAS;IACTC,YAAY;IACZC,UAAU;IACVC,aAAa;IACbC,YAAY;IACZC,eAAe;IACfK,eAAe;IACfE;EACF,CAAC;AACH,CAAC;AAACzB,EAAA,CAhEWD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}